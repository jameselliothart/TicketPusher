@using TicketPusher.API.Projects;
@using TicketPusher.API.Projects.Commands;

<EditForm Model="@ProjectModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label>
        Project Name:
        <InputText id="name" @bind-Value="ProjectModel.Name" />
    </label>

    <button type="submit">Add Project</button>
</EditForm>

@code {
    [Parameter]
    public List<ProjectDto> ParentProjects { get; set; }

    [Parameter]
    public EventCallback<List<ProjectDto>> ParentProjectsChanged { get; set; }

    [Inject]
    private IToastService _toastService { get; set; }

    [Inject]
    private IProjectDataService projectDataService { get; set; }

    protected CreateProjectDto ProjectModel { get; set;} = new CreateProjectDto();

    protected async void HandleValidSubmit()
    {
        var addedProject = await projectDataService.CreateProjectAsync(ProjectModel);
        _toastService.ShowSuccess($"Added project {addedProject.Result.Id}", "Success!");
        var projectList = await projectDataService.GetProjectListAsync();
        ParentProjects = projectList.Result;
        await ParentProjectsChanged.InvokeAsync(ParentProjects);
    }
}